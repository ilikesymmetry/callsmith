{"version":3,"file":"types.js","sourceRoot":"","sources":["types.ts"],"names":[],"mappings":"AAsCA,MAAM,CAAN,IAAY,oBAQX;AARD,WAAY,oBAAoB;IAC9B,mDAA2B,CAAA;IAC3B,mDAA2B,CAAA;IAC3B,+CAAuB,CAAA;IACvB,6CAAqB,CAAA;IACrB,2DAAmC,CAAA;IACnC,iDAAyB,CAAA;IACzB,qDAA6B,CAAA;AAC/B,CAAC,EARW,oBAAoB,KAApB,oBAAoB,QAQ/B","sourcesContent":["import { Dispatch } from \"react\";\n\nexport type ApiPathNode = {\n  value: string;\n  type: \"dir\" | \"file\";\n  data?: { method: string };\n  children: ApiPathNode[];\n};\nexport type PlaygroundState = {\n  selectedRoute: string;\n  routes: Record<string, RouteState>;\n};\nexport type KeyValue = {\n  key: string;\n  value: string;\n};\nexport type Method =\n  | \"GET\"\n  | \"POST\"\n  | \"PUT\"\n  | \"PATCH\"\n  | \"DELETE\"\n  | \"HEAD\"\n  | \"OPTIONS\";\nexport type Route = {\n  path: string;\n  method: Method;\n};\nexport type RouteState = Route & {\n  headers: KeyValue[];\n  query: KeyValue[];\n  params: KeyValue[];\n  body: string;\n  lastResponse?: {\n    status: number;\n    data: any;\n  };\n};\nexport enum PlaygroundActionType {\n  SelectRoute = \"SelectRoute\",\n  EditHeaders = \"EditHeaders\",\n  EditQuery = \"EditQuery\",\n  EditBody = \"EditBody\",\n  EditRouteParams = \"EditRouteParams\",\n  EditMethod = \"EditMethod\",\n  HttpResponse = \"HttpResponse\",\n}\nexport type PlaygroundDispatch = Dispatch<{\n  type: PlaygroundActionType;\n  data: any;\n}>;\n"]}