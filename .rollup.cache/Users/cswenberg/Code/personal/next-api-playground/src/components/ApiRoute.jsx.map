{"version":3,"file":"ApiRoute.jsx","sourceRoot":"","sources":["ApiRoute.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Dispatch, useCallback, useEffect, useState } from \"react\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs-horizontal\";\nimport {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from \"./ui/resizable\";\nimport { Button } from \"./ui/button\";\nimport { KeyValueForm } from \"./KeyValueForm\";\nimport { JsonEditor } from \"./JsonEditor\";\nimport {\n  KeyValue,\n  PlaygroundActionType,\n  PlaygroundState,\n  RouteState,\n} from \"../lib/types\";\nimport { extractPath } from \"../lib/utils\";\nimport { HttpStatusBadge } from \"./HttpStatusBadge\";\nimport { HttpMethodBadge } from \"./HttpMethodBadge\";\nimport { ApiRoutePathNode } from \"./ApiRoutePathNode\";\nimport { ScrollArea } from \"./ui/scroll-area\";\nimport { ContentBox } from \"./ContentBox\";\n\nexport function ApiRoute({\n  state,\n  dispatch,\n}: {\n  state: PlaygroundState;\n  dispatch: Dispatch<{ type: PlaygroundActionType; data: any }>;\n}) {\n  const route = state.routes[state.selectedRoute];\n\n  const onBodyChange = useCallback((v: string) => {\n    dispatch({ type: PlaygroundActionType.EditBody, data: v });\n  }, []);\n  const onQueryChange = useCallback((v: KeyValue[]) => {\n    dispatch({ type: PlaygroundActionType.EditQuery, data: v });\n  }, []);\n  const onHeadersChange = useCallback((v: KeyValue[]) => {\n    dispatch({ type: PlaygroundActionType.EditHeaders, data: v });\n  }, []);\n  const onRouteParamsChange = useCallback((v: KeyValue[]) => {\n    dispatch({ type: PlaygroundActionType.EditRouteParams, data: v });\n  }, []);\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const submitRequest = async (route: RouteState) => {\n    setLoading(true);\n    try {\n      const path = route.path\n        .split(\"/\")\n        .every((name) => !extractPath(name).isDynamic)\n        ? route.path\n        : route.path\n            .split(\"/\")\n            .map((name) => {\n              const { isDynamic, value } = extractPath(name);\n              if (isDynamic) {\n                return route.params.find((kv) => kv.key === value)?.value;\n              } else {\n                return value;\n              }\n            })\n            .join(\"/\");\n      const query =\n        route.query.filter((kv) => kv.key !== \"\").length === 0\n          ? \"\"\n          : route.query.map(({ key, value }) => `${key}=${value}`).join(\"&\");\n      const res = await fetch(`/${path}${query ? \"?\" + query : \"\"}`, {\n        method: route.method,\n        body: route.method !== \"GET\" ? route.body : null,\n      });\n      let data;\n      try {\n        data = await res.json();\n      } catch {\n        data = \"Unknown error. Could not parse JSON.\";\n      }\n      // console.log(data);\n      dispatch({\n        type: PlaygroundActionType.HttpResponse,\n        data: { status: res.status, data },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    setLoading(false);\n  };\n\n  const pathItems = route.path.split(\"/\");\n\n  return (\n    <ResizablePanelGroup direction=\"vertical\" className=\"\">\n      <ResizablePanel defaultSize={50} minSize={8} className=\"px-8 py-4\">\n        <div className=\"pb-4 text-neutral-400\">Request</div>\n        <div className=\"flex justify-between items-center\">\n          <div className=\"space-x-2 flex items-center\">\n            <HttpMethodBadge method={route.method}>\n              {route.method}\n            </HttpMethodBadge>\n            <div className=\"text-lg flex items-center\">\n              {pathItems.map((name, i) => (\n                <ApiRoutePathNode key={`${name}-${i}`} name={name} />\n              ))}\n            </div>\n          </div>\n          <Button loading={loading} onClick={() => submitRequest(route)}>\n            Send\n          </Button>\n        </div>\n        <Tabs className=\"mt-4 h-full\" defaultValue=\"headers\">\n          <TabsList>\n            <TabsTrigger value=\"headers\">Headers</TabsTrigger>\n            <TabsTrigger value=\"query\">Query</TabsTrigger>\n            <TabsTrigger value=\"body\">Body</TabsTrigger>\n            <TabsTrigger\n              value=\"params\"\n              className={\n                route.path\n                  .split(\"/\")\n                  .some((name) => extractPath(name).isDynamic)\n                  ? \"\"\n                  : \"hidden\"\n              }\n              alert={!route.params.every((kv) => !!kv.value)}\n            >\n              Params\n            </TabsTrigger>\n          </TabsList>\n          <div className=\"pb-36 h-full\">\n            <TabsContent value=\"headers\" className=\"h-full\">\n              <ScrollArea className=\"h-full\">\n                <KeyValueForm\n                  keyValues={route.headers}\n                  setKeyValues={onHeadersChange}\n                />\n              </ScrollArea>\n            </TabsContent>\n            <TabsContent value=\"query\" className=\"h-full\">\n              <ScrollArea className=\"h-full\">\n                <KeyValueForm\n                  keyValues={route.query}\n                  setKeyValues={onQueryChange}\n                />\n              </ScrollArea>\n            </TabsContent>\n            <TabsContent value=\"body\" className=\"h-full\">\n              <ContentBox>\n                <ScrollArea className=\"h-full\">\n                  <JsonEditor value={route.body} onChange={onBodyChange} />\n                </ScrollArea>\n              </ContentBox>\n            </TabsContent>\n            <TabsContent value=\"params\" className=\"h-full\">\n              <ScrollArea className=\"h-full\">\n                <KeyValueForm\n                  keyValues={route.params}\n                  setKeyValues={onRouteParamsChange}\n                  lockKeys\n                />\n              </ScrollArea>\n            </TabsContent>\n          </div>\n        </Tabs>\n      </ResizablePanel>\n      <ResizableHandle />\n      <ResizablePanel defaultSize={50} minSize={3} className=\"py-4 px-8\">\n        <div className=\"text-neutral-400 pb-4\">Response</div>\n        {!!route.lastResponse ? (\n          <div className=\"pb-14 w-full h-full\">\n            <div className=\"mb-4\">\n              <HttpStatusBadge code={route.lastResponse!.status} />\n            </div>\n            <div className=\"pb-6 w-full h-full\">\n              <ContentBox>\n                <ScrollArea className=\"h-full\">\n                  <JsonEditor\n                    value={JSON.stringify(route.lastResponse!.data)}\n                    // disabled\n                  />\n                </ScrollArea>\n              </ContentBox>\n            </div>\n          </div>\n        ) : (\n          <div className=\"pb-10 w-full h-full\">\n            <ContentBox>\n              <div className=\"p-2 w-full h-full flex flex-col justify-center text-center text-neutral-600 dark:text-neutral-400\">\n                {loading\n                  ? \"Awaiting response...\"\n                  : \"Press Send to get a response\"}\n              </div>\n            </ContentBox>\n          </div>\n        )}\n      </ResizablePanel>\n    </ResizablePanelGroup>\n  );\n}\n"]}