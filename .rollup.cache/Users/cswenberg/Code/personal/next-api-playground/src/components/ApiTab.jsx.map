{"version":3,"file":"ApiTab.jsx","sourceRoot":"","sources":["ApiTab.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAM,SAAS,EAAE,MAAM,aAAa,CAAC;AAC5C,OAAO,EACL,SAAS,EACT,gBAAgB,EAChB,aAAa,EACb,gBAAgB,GACjB,MAAM,gBAAgB,CAAC;AACxB,OAAO,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAEjD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD,MAAM,UAAU,WAAW,CAAC,MAAc,EAAE,IAAY;IACtD,OAAO,UAAG,MAAM,cAAI,IAAI,CAAE,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AACrD,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,EAAgD;;QAA9C,MAAM,YAAA,EAAE,IAAI,UAAA;IACnC,IAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC;IAChE,2EAA2E;IAC3E,mCAAmC;IACnC,kDAAkD;IAElD,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAClC,CAAC,WAAW,CACV,KAAK,CAAC,CAAC,EAAE,WAAW,EAAE,MAAM,GAAG,EAAE,EAAE,CAAC,CACpC,SAAS,CAAC,iBAAiB,CAC3B,KAAK,CAAC,CAAC,UAAG,MAAA,IAAI,CAAC,IAAI,0CAAE,MAAM,cAAI,SAAS,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAE,CAAC,CAEjE;MAAA,CAAC;;;;;;;;iBAQQ,CACT;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,6BAA6B,CAC1C;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,oCAAoC,CACjD;UAAA,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,MAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAC7D;YAAA,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,MAAM,CACpB;UAAA,EAAE,eAAe,CACnB;QAAA,EAAE,GAAG,CACL;QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CACpB;MAAA,EAAE,GAAG,CACP;IAAA,EAAE,WAAW,CAAC,CACf,CAAC,CAAC,CAAC,CACF,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAClD;MAAA,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,EAAE,MAAM,GAAG,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CACvE;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,wCAAwC,EACvD;QAAA,CAAC,IAAI,CAAC,KAAK,CACb;MAAA,EAAE,gBAAgB,CAClB;MAAA,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAClC;QAAA,CAAC,SAAS,CACR,IAAI,CAAC,UAAU,CACf,SAAS,CAAC,QAAQ,CAClB,YAAY,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,EAAP,CAAO,CAAC,CAAC,CAEhD;UAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,CAAC;;YAAK,OAAA,CAC/B,CAAC,MAAM,CACL,GAAG,CAAC,CAAC,UAAG,MAAA,IAAI,CAAC,IAAI,0CAAE,MAAM,cAAI,SAAS,CAAC;oBACrC,MAAM;oBACN,IAAI,CAAC,KAAK;iBACX,CAAC,cAAI,CAAC,CAAE,CAAC,CACV,MAAM,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CACxC,IAAI,CAAC,CAAC,KAAK,CAAC,EACZ,CACH,CAAA;SAAA,CAAC,CACJ;QAAA,EAAE,SAAS,CACb;MAAA,EAAE,gBAAgB,CACpB;IAAA,EAAE,aAAa,CAAC,CACjB,CAAC;AACJ,CAAC;AAED,kKAAkK","sourcesContent":["import { cn, joinPaths } from \"@/lib/utils\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"./ui/accordion\";\nimport { TabsTrigger } from \"./ui/tabs-vertical\";\nimport { Method, ApiPathNode as Node } from \"@/lib/types\";\nimport { HttpMethodBadge } from \"./HttpMethodBadge\";\n\nexport function stitchRoute(prefix: string, node: string) {\n  return `${prefix}/${node}`.replace(/^\\/|\\/$/g, \"\");\n}\n\nexport function ApiTab({ prefix, node }: { prefix: string; node: Node }) {\n  const offset = prefix.split(\"/\").length + Number(prefix !== \"\");\n  // const value = `${node.data?.method}:${joinPaths([prefix, node.value])}`;\n  // console.log(\"tab value\", value);\n  // console.log(\"node\", node.value, node.children);\n\n  return node.children.length === 0 ? (\n    <TabsTrigger\n      style={{ paddingLeft: offset * 24 }}\n      className=\"w-full relative\"\n      value={`${node.data?.method}:${joinPaths([prefix, node.value])}`}\n    >\n      {/* <div className=\"flex items-center absolute left-0 bg-black\">\n        {Array.from({ length: offset }, (_, i) => (\n          <div\n            className=\"border-l w-4 bg-black\"\n            style={{ paddingLeft: i * 24 }}\n            key={i}\n          />\n        ))}\n      </div> */}\n      <div className=\"flex items-center space-x-1\">\n        <div className=\"flex w-12 items-center justify-end\">\n          <HttpMethodBadge method={node.data?.method as Method} size=\"sm\">\n            {node.data?.method}\n          </HttpMethodBadge>\n        </div>\n        <p>{node.value}</p>\n      </div>\n    </TabsTrigger>\n  ) : (\n    <AccordionItem value={node.value} className=\"w-full\">\n      <AccordionTrigger style={{ paddingLeft: offset * 24 }} className=\"w-full\">\n        <div className=\"flex w-[28px] items-center justify-end\" />\n        {node.value}\n      </AccordionTrigger>\n      <AccordionContent className=\"w-full\">\n        <Accordion\n          type=\"multiple\"\n          className=\"w-full\"\n          defaultValue={node.children.map((n) => n.value)}\n        >\n          {node.children.map((child, i) => (\n            <ApiTab\n              key={`${node.data?.method}:${joinPaths([\n                prefix,\n                node.value,\n              ])}-${i}`}\n              prefix={stitchRoute(prefix, node.value)}\n              node={child}\n            />\n          ))}\n        </Accordion>\n      </AccordionContent>\n    </AccordionItem>\n  );\n}\n\n// Given an array of strings representing file paths, e.g. [\"file1\", \"dir1/file2\", \"dir1/dir2/file3\"], construct an array of Nodes of type {value:string, children\n"]}