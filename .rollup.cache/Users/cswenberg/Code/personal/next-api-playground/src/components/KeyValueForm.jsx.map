{"version":3,"file":"KeyValueForm.jsx","sourceRoot":"","sources":["KeyValueForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { TrashIcon } from \"lucide-react\";\nimport { Input } from \"./ui/input\";\nimport { KeyValue } from \"@/lib/types\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"./ui/table\";\n\nexport function KeyValueForm({\n  keyValues,\n  setKeyValues,\n  lockKeys = false,\n}: {\n  keyValues: KeyValue[];\n  setKeyValues: (v: any) => void;\n  lockKeys?: boolean;\n}) {\n  const handleChange = (e: any) => {\n    const { name, value } = e.target;\n    const i = parseInt(name.split(\".\")[1]);\n    const k = name.split(\".\")[2];\n    let newKeyValues = keyValues.map((keyValue, j) => {\n      if (i !== j) {\n        return keyValue;\n      } else {\n        return {\n          ...keyValue,\n          [k]: value,\n        };\n      }\n    });\n    const lastKeyValue = newKeyValues[newKeyValues.length - 1];\n    if (!lockKeys && (lastKeyValue.key !== \"\" || lastKeyValue.value !== \"\")) {\n      newKeyValues = [...newKeyValues, { key: \"\", value: \"\" }];\n    }\n    setKeyValues(newKeyValues);\n  };\n\n  return (\n    <Table className=\"space-y-2 w-2/3\">\n      <TableHeader className=\"\">\n        <TableHead className=\"pl-3 w-1/3\">Key</TableHead>\n        <TableHead className=\"pl-3 w-2/3\">Value</TableHead>\n      </TableHeader>\n      <TableBody>\n        {keyValues.map((keyValue, i) => (\n          <TableRow className=\"\" key={i}>\n            <TableCell>\n              <Input\n                name={`fields.${i}.key`}\n                value={keyValue.key}\n                placeholder=\"Key\"\n                onChange={(e) => {\n                  handleChange(e);\n                }}\n                disabled={lockKeys}\n              />\n            </TableCell>\n            <TableCell>\n              <div className=\"relative\">\n                <Input\n                  name={`fields.${i}.value`}\n                  value={keyValue.value}\n                  placeholder=\"Value\"\n                  onChange={(e) => {\n                    handleChange(e);\n                  }}\n                />\n                <button\n                  className=\"absolute top-2 -right-8\"\n                  hidden={i === keyValues.length - 1}\n                  onClick={() => {\n                    const newKeyValues = keyValues.filter((v, j) => i !== j);\n                    setKeyValues(newKeyValues);\n                  }}\n                >\n                  <TrashIcon className=\"h-5 w-5 text-neutral-400 hover:text-black dark:text-neutral-600 dark:hover:text-white\" />\n                </button>\n              </div>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n"]}