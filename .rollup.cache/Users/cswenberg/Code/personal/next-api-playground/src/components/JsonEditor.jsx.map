{"version":3,"file":"JsonEditor.jsx","sourceRoot":"","sources":["JsonEditor.tsx"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,wBAAwB,CAAC;AACjD,OAAO,eAAe,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AAC9D,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,IAAI,IAAI,CAAC,EAAE,MAAM,kBAAkB,CAAC;AAC7C,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvC,MAAM,UAAU,UAAU,CAAC,EAQ1B;QAPC,KAAK,WAAA,EACL,QAAQ,cAAA,EACR,gBAAgB,EAAhB,QAAQ,mBAAG,KAAK,KAAA;IAMhB,IAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;IACzB,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE5B,IAAM,WAAW,GAAG,WAAW,CAAC;QAC9B,KAAK,OAAA;QACL,QAAQ,EAAE;YACR,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;YACrD,eAAe,EAAE,EAAE;YACnB,UAAU,EAAE,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;YACrD,KAAK,EAAE,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;YAChD,SAAS,EAAE,SAAS;YACpB,cAAc,EAAE,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;YACzD,aAAa,EAAE,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;YACxD,gBAAgB,EAAE,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;YAC3D,YAAY,EAAE,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;YACvD,gBAAgB,EAAE,SAAS;YAC3B,sBAAsB,EAAE,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;SAClE;QACD,MAAM,EAAE;YACN,EAAE,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE;YACnC,EAAE,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE;YACnC,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE;YACjC,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE;SAClC;KACF,CAAC,CAAC;IACH,OAAO,CACL,CAAC,eAAe,CACd,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,KAAK,CAAC,CAAC,WAAW,CAAC,CACnB,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAChD,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,EACpB,CACH,CAAC;AACJ,CAAC","sourcesContent":["import createTheme from \"@uiw/codemirror-themes\";\nimport ReactCodeMirror from \"@uiw/react-codemirror\";\nimport { json, jsonParseLinter } from \"@codemirror/lang-json\";\nimport { linter } from \"@codemirror/lint\";\nimport { tags as t } from \"@lezer/highlight\";\nimport { useTheme } from \"@/lib/hooks\";\n\nexport function JsonEditor({\n  value,\n  onChange,\n  disabled = false,\n}: {\n  value: string;\n  onChange?: (v: string) => void;\n  disabled?: boolean;\n}) {\n  const theme = useTheme();\n  console.log(\"theme\", theme);\n\n  const editorTheme = createTheme({\n    theme,\n    settings: {\n      fontSize: \"14px\",\n      background: theme === \"light\" ? \"#FAFAFA\" : \"#0A0A0A\",\n      backgroundImage: \"\",\n      foreground: theme === \"light\" ? \"#000000\" : \"#FFFFFF\",\n      caret: theme === \"light\" ? \"#000000\" : \"#FFFFFF\",\n      selection: \"#525252\",\n      selectionMatch: theme === \"light\" ? \"#FAFAFA\" : \"#0A0A0A\",\n      lineHighlight: theme === \"light\" ? \"#E5E5E5\" : \"#262626\",\n      gutterBackground: theme === \"light\" ? \"#FAFAFA\" : \"#0A0A0A\",\n      gutterBorder: theme === \"light\" ? \"#E5E5E5\" : \"#262626\",\n      gutterForeground: \"#A3A3A3\",\n      gutterActiveForeground: theme === \"light\" ? \"#000000\" : \"#FFFFFF\",\n    },\n    styles: [\n      { tag: t.string, color: \"#FB923C\" },\n      { tag: t.number, color: \"#4ADE80\" },\n      { tag: t.bool, color: \"#2563EB\" },\n      { tag: t.null, color: \"#DB2777\" },\n    ],\n  });\n  return (\n    <ReactCodeMirror\n      value={value}\n      onChange={onChange}\n      theme={editorTheme}\n      extensions={[json(), linter(jsonParseLinter())]}\n      editable={!disabled}\n    />\n  );\n}\n"]}